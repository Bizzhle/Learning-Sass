/*
//variables
$font-stack: Helvetica, sans-serif;
$primary-color: #333;

body {
    font: 100% $font-stack;
    color: $primary-color;
}

//datatypes
$i-am-null: null; // empty annd returns false

$i-am-true: true;
$i-am-false: false;

$a-number: 7;

$name: 'Paul Egbo';

$color: lighten(white, 15%);
$white: #999099;

//arithmetric operators
h1 {
    font-size: 4px + 2;
}

h2 {
    font-size: 4px - 2;
}

h3 {
    font-size: (10/2);
    opacity: random($limit: (4)) / 5;
    padding-right: 2px / 4px + 3px;
}

h4 {
    width: 3px * 5 + 5px;
    width: 3 * (5px + 5px);
    width: 3px + (6px / 2) * 3;
    // width: 3px math.div(6px, 2) * 3;
}

// mixins
@mixin font-fl($font) {
    &:after {
        @if (type-of($font) == string) {
            content: 'My font is: #{$font}.';
        } @else {
            content: 'Sorry, the argument #{$font} is a #{type-of($font)}. ';
        }
    }
}

 h2 {
    @include font-fl(sans-serif)
} */

/* comparison operator - used to compare numbers */

$padding: 50px;

h2 {
 @if ($padding <= 20px) {
     padding: $padding;
 } @else {
     padding: $padding / 2;
 }
}

// logical operators
$var1: "foo";
$var2: "bar";

@mixin font-fl() {
    //& tells css to add :after to the h2 rule
    &:after {
        @if $var1 == "foo" and $var2 == "bar" {
            content: "var1 and var2 are true";
        } @else {
            content: "var1 and var2 are false";
        }
    }
}

h2 {
    @include font-fl();
}

// string operations

$first-name: "Paul";
$last-name: "Egbo";

@mixin string-concat-name {
    &:after {
        content: "Your name is: " + $first-name + " " + $last-name;
    }
    
}

h2 {
    @include string-concat-name();
}

// & ampersand
// concatenate states and rules  to class selector

.button {
    &:visited { color: white }
    &:hover { color: white }
    &:active { color: white }
}

.button {
    & > span { color: white }
    & + span { color: white }

    & ~ span { color: white }

}

.btn {
    &-primary { color: white }
    &-secondary { color: white }

}

.button {
    body.page-about & { color: white}
}

//interpolation
// passing a variable to a string

@mixin font-fl($font) {
    &:after {
        @if (type-of($value: $font) == string) {
            content: 'My font is #{$font}';
        } @else {
            content: 'Sorry, the argument #{$font} is a #{type-of($font)}.';
        }
    }
}
h2 {
    @include font-fl(sans-serif)
}
